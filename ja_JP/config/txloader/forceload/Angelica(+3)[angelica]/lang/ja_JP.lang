options.button.shader=シェーダー...

options.chunks=%s チャンク
options.entityShadows=エンティティの影
sodium.option_impact.low=低
sodium.option_impact.medium=中
sodium.option_impact.high=高
sodium.option_impact.extreme=最高
sodium.option_impact.varies=可変
sodium.options.pages.quality=品質
sodium.options.pages.performance=パフォーマンス
sodium.options.pages.advanced=高度な設定
sodium.options.view_distance.tooltip=描画距離は、地形が描画される距離を設定します。距離が短いほど描画される地形が減り、フレームレートが向上します。
sodium.options.simulation_distance.tooltip=シミュレーション距離は、地形やエンティティがロード・ティック処理される距離を設定します。距離が短いほど内部サーバーのロードが減り、フレームレートが向上します。
sodium.options.brightness.tooltip=ゲーム内の明るさ(ガンマ値)を設定します。
sodium.options.clouds.name=雲
sodium.options.clouds.tooltip=雲を表示するかどうかを設定します。
sodium.options.gui_scale.tooltip=ユーザーインターフェースに適用する最大倍率を設定します。『自動』に設定すると、常に最大となる倍率が適用されます。
sodium.options.fullscreen.tooltip=有効にすると、(サポートされている場合)ゲームをフルスクリーンで表示します。
sodium.options.v_sync.tooltip=有効にすると、ゲームのフレームレートがモニターのリフレッシュレートと同期され、全体的な入力の遅延とひきかえに、一般により滑らかなゲーム体験が得られます。システムが遅すぎる場合、この設定はパフォーマンスを低下させる可能性があります。
sodium.options.fps_limit.tooltip=最大FPSを制限します。マルチタスク時のバッテリー消費と全般的なシステム負荷を軽減するのに役立ちます。垂直同期が有効な場合、この値がディスプレイのリフレッシュレートよりも低くない限り、この設定は無視されます。
sodium.options.view_bobbing.tooltip=有効にすると、移動するときにプレイヤーの視点が上下左右に揺れます。プレイ中に画面酔いするプレイヤーは、これを無効にするとよいでしょう。
sodium.options.attack_indicator.tooltip=攻撃クールダウン表示が画面上のどこに表示されるかを設定します。
sodium.options.autosave_indicator.tooltip=有効にすると、ワールドをディスクに保存しているときにインジケータが表示されます。
sodium.options.graphics_quality.tooltip=デフォルトのグラフィックス設定は、従来のオプションを制御し、Modの互換性のために必要となります。以下のオプションが "デフォルト"のままである場合、この設定が適用されます。
sodium.options.clouds_quality.tooltip=空に描画される雲の品質を設定します。
sodium.options.weather_quality.tooltip=雨と雪のエフェクトの品質を設定します。
sodium.options.leaves_quality.name=葉の品質
sodium.options.leaves_quality.tooltip=葉の品質を設定します。
sodium.options.grass_quality.name=草の品質
sodium.options.grass_quality.tooltip=草ブロックの側面の品質を設定します。
sodium.options.particle_quality.name=パーティクルの品質
sodium.options.particle_quality.tooltip=画面上に同時に表示されるパーティクルの最大数を設定します。
sodium.options.smooth_lighting.tooltip=ブロックが滑らかにライティング、シェーディングされるかどうかを設定します。チャンクの再構築に必要な時間がわずかに増加しますが、フレームレートには影響しません。
sodium.options.biome_blend.value=%s ブロック
sodium.options.biome_blend.tooltip=ブロックの着色のためにサンプリングされるバイオームの範囲を設定します。値を高くするとチャンクの構築にかかる時間が大幅に増加しますが、品質の向上はわずかです。
sodium.options.entity_distance.tooltip=プレイヤーからどれだけ離れたエンティティを描画するかを設定します。値を高くすると、フレームレートとひきかえに描画距離が長くなります。
sodium.options.entity_shadows.tooltip=有効にすると、モブやその他エンティティの下に基本的な影が描画されます。
sodium.options.vignette.name=ビネット効果
sodium.options.vignette.tooltip=有効にすると、プレイヤーの視界にビネット効果が描画されます。これは、フィルレートが制限されていない限り、フレームレートに違いをもたらすことはほとんどありません。
sodium.options.mipmap_levels.tooltip=Controls the number of mipmaps which will be used for block model textures. Higher values provide better rendering of blocks in the distance, but may adversely affect performance with many animated textures.
sodium.options.use_chunk_multidraw.name=Chunk Multi-Draw
sodium.options.use_chunk_multidraw.tooltip=Multi-draw allows multiple chunks to be rendered with fewer draw calls, greatly reducing CPU overhead when rendering the world while also potentially allowing for more efficient GPU utilization. This optimization may cause issues with some graphics drivers, so you should try disabling it if you are experiencing glitches.
sodium.options.use_vertex_objects.name=Vertex Array Objects
sodium.options.use_vertex_objects.tooltip=Helps to improve performance by moving information about how vertex data should be rendered into the driver, allowing it to better optimize for repeated rendering of the same objects. There is generally no reason to disable this unless you're using incompatible mods.
sodium.options.use_block_face_culling.name=Block Face Culling
sodium.options.use_block_face_culling.tooltip=If enabled, only the sides of blocks which are facing the camera will be submitted for rendering. This can eliminate a large number of block faces very early in the rendering process, saving memory bandwidth and time on the GPU. Some resource packs may have issues with this option, so try disabling it if you're seeing holes in blocks.
sodium.options.use_compact_vertex_format.name=Compact Vertex Format
sodium.options.use_compact_vertex_format.tooltip=If enabled, a more compact vertex format will be used for rendering chunks. This can reduce graphics memory usage and bandwidth requirements significantly, especially for integrated graphics cards, but can cause z-fighting with some resource packs due to how it reduces the precision of position and texture coordinate attributes.
sodium.options.use_fog_occlusion.name=Fog Occlusion
sodium.options.use_fog_occlusion.tooltip=If enabled, chunks which are determined to be fully hidden by fog effects will not be rendered, helping to improve performance. The improvement can be more dramatic when fog effects are heavier (such as while underwater), but it may cause undesirable visual artifacts between the sky and fog in some scenarios.
sodium.options.use_entity_culling.name=Entity Culling
sodium.options.use_entity_culling.tooltip=If enabled, entities determined not to be in any visible chunks will be skipped during rendering. This can help improve performance by avoiding the rendering of entities located underground or behind walls.
sodium.options.use_particle_culling.name=Particle Culling
sodium.options.use_particle_culling.tooltip=If enabled, only particles which are determined to be visible will be rendered. This can provide a significant improvement to frame rates when many particles are nearby.
sodium.options.animate_only_visible_textures.name=Animate Only Visible Textures
sodium.options.animate_only_visible_textures.tooltip=If enabled, only animated textures determined to be visible will be updated. This can provide a significant boost to frame rates on some hardware, especially with heavier resource packs. If you experience issues with some textures not being animated, try disabling this option.
sodium.options.translucency_sorting.name=Translucency Sorting
sodium.options.translucency_sorting.tooltip=If enabled, translucent blocks will be sorted correctly from back to front to provide better rendering, especially when multiple translucent blocks are in view and layered.  This is a bit of an expensive operation.
sodium.options.cpu_render_ahead_limit.name=CPU Render-Ahead Limit
sodium.options.cpu_render_ahead_limit.tooltip=Specifies the maximum number of frames the CPU can be waiting on the GPU to finish rendering. Very low or high values may create frame rate instability.
sodium.options.cpu_render_ahead_limit.value=%s frame(s)
sodium.options.allow_direct_memory_access.name=Allow Direct Memory Access
sodium.options.allow_direct_memory_access.tooltip=If enabled, some critical code paths will be allowed to use direct memory access for performance. This often greatly reduces CPU overhead for chunk and entity rendering, but can make it harder to diagnose some bugs and crashes. You should only disable this if you've been asked to or otherwise know what you're doing.
sodium.options.ignore_driver_blacklist.name=Ignore Driver Blacklist
sodium.options.ignore_driver_blacklist.tooltip=If enabled, known incompatibilities with your hardware/driver configuration will be ignored, allowing you to enable options that may cause issues with your game. You should generally not touch this option unless you know exactly what you are doing. After changing this option, you must save, close, and then re-open the settings screen.
sodium.options.enable_memory_tracing.name=Enable Memory Tracing
sodium.options.enable_memory_tracing.tooltip=Debugging feature. If enabled, stack traces will be collected alongside memory allocations to help improve diagnostic information when memory leaks are detected.
sodium.options.performance_impact_string=Performance Impact: %s
sodium.options.use_persistent_mapping.name=Persistent Mapping
sodium.options.use_persistent_mapping.tooltip=If enabled, a small amount of memory will be persistently mapped for speeding up chunk updates and entity rendering.\n\nRequires OpenGL 4.4 or ARB_buffer_storage.
sodium.options.chunk_memory_allocator.name=Chunk Memory Allocator
sodium.options.chunk_memory_allocator.tooltip=Selects the memory allocator that will be used for chunk rendering.\n- ASYNC: Fastest option, works well with most modern graphics drivers.\n- SWAP: Fallback option for older graphics drivers. May increase memory usage significantly.
sodium.options.chunk_memory_allocator.async=Async
sodium.options.chunk_memory_allocator.swap=Swap
sodium.options.chunk_update_threads.name=Chunk Update Threads
sodium.options.chunk_update_threads.tooltip=Specifies the number of threads to use for chunk building. Using more threads can speed up chunk loading and update speed, but may negatively impact frame times.
sodium.options.always_defer_chunk_updates.name=Always Defer Chunk Updates
sodium.options.always_defer_chunk_updates.tooltip=If enabled, rendering will never wait for chunk updates to finish, even if they are important. This can greatly improve frame rates in some scenarios, but it may create significant visual lag in the world.
sodium.options.use_no_error_context.name=No Error Context
sodium.options.use_no_error_context.tooltip=If enabled, the OpenGL context will be created with error checking disabled. This may slightly improve performance, but it also increases the risk that the game will crash instead of gracefully handling OpenGL errors. You should disable this option if you are experiencing sudden unexplained crashes.
sodium.options.use_gl_state_cache.name=GL State Cache
sodium.options.use_gl_state_cache.tooltip=If enabled, the OpenGL state cache will be used to reduce the number of redundant state changes. This can improve performance, but it may also cause issues with some mods.  Does not persist across game restarts.
sodium.options.threads.value=%s thread(s)
sodium.options.default=Default
sodium.options.buttons.undo=Undo
sodium.options.buttons.apply=Apply
sodium.options.buttons.donate=Buy coffee for JellySquid!
options.dynamic_fov=Dynamic FOV
options.dynamic_fov.tooltip=If enabled, the game's field of view will change based on the player's speed.
options.framerate=%s FPS
iris.shaders.toggled=Toggled shaders to %s!
iris.shaders.disabled=Shaders disabled!
options.iris.apply=Apply
options.iris.refresh=Refresh
options.iris.openShaderPackFolder=Open Shader Pack Folder...
options.iris.shaderPackSettings=Shader Pack Settings...
options.iris.shaderPackList=Shader Pack List...
options.iris.refreshShaderPacks=Refresh Shader Packs
options.iris.shaderPackSelection=Shader Packs...
options.iris.shaderPackSelection.title=Shader Packs
options.iris.shaderPackSelection.addedPack=Added Shader Pack "%s"
options.iris.shaderPackSelection.addedPacks=Added %s Shader Packs
options.iris.shaderPackSelection.failedAdd=Files were not valid Shader Packs
options.iris.shaderPackSelection.failedAddSingle="%s" is not a valid Shader Pack
options.iris.shaderPackSelection.copyError=Could not add Shader Pack "%s"
options.iris.shaderPackSelection.copyErrorAlreadyExists="%s" is already in your Shader Packs folder!
options.iris.shaderPackOptions.tooManyFiles=Cannot import multiple Shader Settings files!
options.iris.shaderPackOptions.failedImport=Failed to import Shader Settings file "%s"
options.iris.shaderPackOptions.importedSettings=Imported Shader Settings from "%s"
options.iris.shaders.disabled=Shaders: Disabled
options.iris.shaders.enabled=Shaders: Enabled
options.iris.shaders.nonePresent=Shaders: No Packs Present
options.iris.back=Back
options.iris.reset=Reset
options.iris.reset.tooltip=Reset ALL options and apply?
options.iris.reset.tooltip.holdShift=Hold SHIFT and click to reset
options.iris.importSettings.tooltip=Import settings from file
options.iris.exportSettings.tooltip=Export applied settings to file
options.iris.mustDisableFullscreen=Please disable fullscreen first!
options.iris.setToDefault=Set option to default value?
options.iris.profile=Profile
options.iris.profile.custom=Custom
options.iris.shadowDistance=Max Shadow Distance
options.iris.shadowDistance.enabled=Allows you to change the maximum distance for shadows. Terrain and entities beyond this distance will not cast shadows. Lowering the shadow distance can significantly increase performance.
options.iris.shadowDistance.disabled=Your current shader pack has already set a render distance for shadows; you cannot change it.
options.iris.gui.hide=Hide GUI
options.iris.gui.show=Show GUI
pack.iris.select.title=Select
pack.iris.configure.title=Configure
label.iris.true=On
label.iris.false=Off