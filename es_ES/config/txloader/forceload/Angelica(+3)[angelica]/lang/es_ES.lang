options.button.shader=Shaders...

options.chunks=%s chunks
options.entityShadows=Sombras de Entidades
sodium.option_impact.low=Bajo
sodium.option_impact.medium=Medio
sodium.option_impact.high=Alto
sodium.option_impact.extreme=Extremo
sodium.option_impact.varies=Varía
sodium.options.pages.quality=Calidad
sodium.options.pages.performance=Rendimiento
sodium.options.pages.advanced=Avanzado
sodium.options.view_distance.tooltip=La distancia de renderizado controla cómo de lejos se renderizará el terreno. Distancias más cortas significa que menos terreno sera renderizado, aumentando los FPS.
sodium.options.simulation_distance.tooltip=La distancia de simulación controla cómo de lejos se cargará y tickeará el terreno y las entidades. Distancias más cortas pueden reducir la carga en el servidor interno y puede aumentar los FPS.
sodium.options.brightness.tooltip=Controla el brillo (gamma) del juego.
sodium.options.clouds.name=Nubes
sodium.options.clouds.tooltip=Controla si las nubes serán o no visibles.
sodium.options.gui_scale.tooltip=Establece el factor de escala maximo que se utilizará para la interfaz de usuario. "auto" significa que se usará el factor más grande posible.
sodium.options.fullscreen.tooltip=Si se habilita, el juego se mostrará en pantalla completa (si es compatible).
sodium.options.v_sync.tooltip=Si se habilita, la velocidad de fotogramas del juego estára sincronizada a la velocidad de refresco del monitor, lo que brindará una experiencia generalmente mas suave a expensas de la latencia al pulsar teclas o mover el ratón. Esta configuración puede reducir el rendimiento si tu sistema es muy lento.
sodium.options.fps_limit.tooltip=Limita el número máximo de fotogramas por segundo. Esto puede ayudar a reducir uso de batería y carga general del sistema al estar haciendo múltiples tareas. Si V-Sync esta activado, esta opción va a ser ignorada a menos de que sea más baja que la velocidad de refresco de tu monitor.
sodium.options.view_bobbing.tooltip=Si se activa, la vista del jugador se mecerá y botará al moverse. A aquellos jugadores que sienten cinetosis (mareo) cuando juegan les pouede convenir desactivar esto.
sodium.options.attack_indicator.tooltip=Controla en qué parte de la pantalla se muestra el Indicador de Ataque.
sodium.options.autosave_indicator.tooltip=Si se activa, se mostrará un indicador mientras se está guardando el mundo.
sodium.options.graphics_quality.tooltip=Los controles de calidad de gráficos por defecto controlan algunas opciones antiguas y es necesario para la compatibilidad con mods. Si las opciones abajo se dejan en "Default", ellas usaran esta configuración.
sodium.options.clouds_quality.tooltip=Controla la calidad de nubes renderizadas en el cielo.
sodium.options.weather_quality.tooltip=Controla la calidad de la lluvia y los efectos de nieve.
sodium.options.leaves_quality.name=Calidad de Hojas
sodium.options.leaves_quality.tooltip=Controla la calidad de las hojas.
sodium.options.grass_quality.name=Calidad de Césped
sodium.options.grass_quality.tooltip=Controla la calidad de los lados de los bloques de césped.
sodium.options.particle_quality.name=Calidad de Partículas
sodium.options.particle_quality.tooltip=Controla el número máximo de partículas que pueden estar presentes en pantalla en un momento dado.
sodium.options.smooth_lighting.tooltip=Controla si los bloques se iluminarán y sombrearán suavemente. Esto aumenta ligeramente el tiempo necesario para reconstruir un chunk, pero no afecta a los FPS.
sodium.options.biome_blend.value=%s bloque(s)
sodium.options.biome_blend.tooltip=Controla el rango en cual biomas se muestrearán para la coloración de bloques. Valores más altos aumentan considerablemente el tiempo que se necesita para construir chunks para lograr mejoras decrecientes en calidad.
sodium.options.entity_distance.tooltip=Controla cómo de lejos se pueden renderizar entidades desde el jugador. Valores más altos incrementan la distancia de renderizado a expensas de los FPS.
sodium.options.entity_shadows.tooltip=Si se activa, sombras básicas serán renderizadas bajo mobs y otras entidades.
sodium.options.vignette.name=Viñetado
sodium.options.vignette.tooltip=Si se activa, un efecto de viñetado sera renderizado en la vista del jugador. Es muy poco probable que esto marque una diferencia en los FPS a menos de que tengas una tasa de relleno limitada.
sodium.options.mipmap_levels.tooltip=Controla la cantidad de mipmaps que se usarán para los bloques. Valores más altos pueden mejorar la calidad de los bloques lejanos, pero puede reducir el rendimiento si hay muchas texturas animadas.
sodium.options.use_chunk_multidraw.name=Usar Multi-Pintado para Chunks
sodium.options.use_chunk_multidraw.tooltip=El Multi-Pintado permite renderizar múltiples chunks con menos primitivas de pintado, mejorando mucho el uso de CPU cuando se renderiza el mnundo, y también potencialmente mejorando la eficacia de la GPU. Esta optimización puede causar problemas con algunos drivers, así que deberías desactivarla si ves glitches.
sodium.options.use_vertex_objects.name=Usar Objetos de Arrays de Vértices
sodium.options.use_vertex_objects.tooltip=Ayuda a mejorar el rendimiento para mover al driver información sobre cómo renderizar vértices, lo que le permite optimizar mejor el pintado de objetos repetidos. No suele haber motivo para desactivar esto a menos que uses mods incompatibles.
sodium.options.use_block_face_culling.name=Usar Culling de Caras de Bloques
sodium.options.use_block_face_culling.tooltip=Si se activa, solo los lados que apunta hacia la cámara serán marcados para renderizar. Esto puede eliminar muchas caras muy pronto en el proceso de renderizado, ahorrando memoria y tiempo en la GPU. Algunos paquetes de recursos pueden tener problemas con esto, así que prueba a desactivarlo si ves agujeros en los bloques.
sodium.options.use_compact_vertex_format.name=Usar Formato Compacto para Vértices
sodium.options.use_compact_vertex_format.tooltip=Si se activa, se usará un formato más compacto para vértices para renderizar chunks. Esto puede reducir el uso de memoria significativamente, especialmente para tarjetas integradas, pero puede causar z-fighting con algunos paquetes de recursos debido a cómo reduce la precisión de las coordenadas de posición y textura.
sodium.options.use_fog_occlusion.name=Usar Oclusión de Niebla
sodium.options.use_fog_occlusion.tooltip=Si se activa, los chunks que estén completamente tras niebla no serán renderizados, mejorando el rendimiento. La mejora será más notable si la niebla es densa (como cuando se está sumergido en agua), pero puede causar artefactos entre el cielo y la niebla en algunos casos.
sodium.options.use_entity_culling.name=Usar Culling de Entidades
sodium.options.use_entity_culling.tooltip=Si se activa, las entidades que no estén en chunks visibles no serán renderizadas. Esto puede mejorar el rendimiento al evitar renderizar entidades que estén bajo tierra o tras paredes.
sodium.options.use_particle_culling.name=Usar Culling de Partículas
sodium.options.use_particle_culling.tooltip=Si se activa, solo se renderizarán partículas visibles. Esto puede mejorar mucho los FPS cuando hay muchas partículas cerca.
sodium.options.animate_only_visible_textures.name=Solo Animar Texuras Visibles
sodium.options.animate_only_visible_textures.tooltip=Si se activa, solo las texturas que sean visibles se actualizarán. Esto puede mejorar los FPS en cierto hardware, especialmente con paquetes de recursos grandes. Si algunas texturas no se animan, desactiva opción.
sodium.options.translucency_sorting.name=Ordenar Translucencia
sodium.options.translucency_sorting.tooltip=Si se activa, los bloques translúcidos se ordenarán correctamente de atrás a adelante, lo que mejora el renderizado cuando hay varias capas de ellos. Esta es una operación relativamente cara.
sodium.options.cpu_render_ahead_limit.name=Límite de Pre-Renderizado de CPU
sodium.options.cpu_render_ahead_limit.tooltip=Especifica cuántos frames como máximo puede estar esperando la CPU a que la GPU termine de renderizar. Valores muy altos o muy bajos pueden causar inestabilidad de FPS.
sodium.options.cpu_render_ahead_limit.value=%s frame(s)
sodium.options.allow_direct_memory_access.name=Permitir Acceso Directo a Memoria (DMA)
sodium.options.allow_direct_memory_access.tooltip=Si se activa, algunos fragmentos de código podrán usar DMA. Esto reduce el overhead en CPU para renderizar chunks y entidades, pero puede impedir diagnosticar bugs y crashes. Únicamente deberías desactivar esto si se te ha indicado, o si sabes lo que haces.
sodium.options.ignore_driver_blacklist.name=Ignorar Lista Negra de Drivers
sodium.options.ignore_driver_blacklist.tooltip=Si se activa, las incompatibilidades conocidas con tu hardware/drivers serán ignoradas, perimiténdote activar opciones que pueden causar problemas con tu juego. No deberías tocar esta opción a menos que sepas exactamente lo que estás haciendo. Tras cambiar esto, tienes que guardar, cerrar y reabrir la pantalla de ajustes.
sodium.options.enable_memory_tracing.name=Enable Memory Tracing
sodium.options.enable_memory_tracing.tooltip=Debugging feature. If enabled, stack traces will be collected alongside memory allocations to help improve diagnostic information when memory leaks are detected.
sodium.options.performance_impact_string=Performance Impact: %s
sodium.options.use_persistent_mapping.name=Persistent Mapping
sodium.options.use_persistent_mapping.tooltip=If enabled, a small amount of memory will be persistently mapped for speeding up chunk updates and entity rendering.\n\nRequires OpenGL 4.4 or ARB_buffer_storage.
sodium.options.chunk_memory_allocator.name=Chunk Memory Allocator
sodium.options.chunk_memory_allocator.tooltip=Selects the memory allocator that will be used for chunk rendering.\n- ASYNC: Fastest option, works well with most modern graphics drivers.\n- SWAP: Fallback option for older graphics drivers. May increase memory usage significantly.
sodium.options.chunk_memory_allocator.async=Async
sodium.options.chunk_memory_allocator.swap=Swap
sodium.options.chunk_update_threads.name=Chunk Update Threads
sodium.options.chunk_update_threads.tooltip=Specifies the number of threads to use for chunk building. Using more threads can speed up chunk loading and update speed, but may negatively impact frame times.
sodium.options.always_defer_chunk_updates.name=Always Defer Chunk Updates
sodium.options.always_defer_chunk_updates.tooltip=If enabled, rendering will never wait for chunk updates to finish, even if they are important. This can greatly improve frame rates in some scenarios, but it may create significant visual lag in the world.
sodium.options.use_no_error_context.name=No Error Context
sodium.options.use_no_error_context.tooltip=If enabled, the OpenGL context will be created with error checking disabled. This may slightly improve performance, but it also increases the risk that the game will crash instead of gracefully handling OpenGL errors. You should disable this option if you are experiencing sudden unexplained crashes.
sodium.options.use_gl_state_cache.name=GL State Cache
sodium.options.use_gl_state_cache.tooltip=If enabled, the OpenGL state cache will be used to reduce the number of redundant state changes. This can improve performance, but it may also cause issues with some mods.  Does not persist across game restarts.
sodium.options.threads.value=%s thread(s)
sodium.options.default=Default
sodium.options.buttons.undo=Undo
sodium.options.buttons.apply=Apply
sodium.options.buttons.donate=Buy coffee for JellySquid!
options.dynamic_fov=Dynamic FOV
options.dynamic_fov.tooltip=If enabled, the game's field of view will change based on the player's speed.
options.framerate=%s FPS
iris.shaders.toggled=Toggled shaders to %s!
iris.shaders.disabled=Shaders disabled!
options.iris.apply=Apply
options.iris.refresh=Refresh
options.iris.openShaderPackFolder=Open Shader Pack Folder...
options.iris.shaderPackSettings=Shader Pack Settings...
options.iris.shaderPackList=Shader Pack List...
options.iris.refreshShaderPacks=Refresh Shader Packs
options.iris.shaderPackSelection=Shader Packs...
options.iris.shaderPackSelection.title=Shader Packs
options.iris.shaderPackSelection.addedPack=Added Shader Pack "%s"
options.iris.shaderPackSelection.addedPacks=Added %s Shader Packs
options.iris.shaderPackSelection.failedAdd=Files were not valid Shader Packs
options.iris.shaderPackSelection.failedAddSingle="%s" is not a valid Shader Pack
options.iris.shaderPackSelection.copyError=Could not add Shader Pack "%s"
options.iris.shaderPackSelection.copyErrorAlreadyExists="%s" is already in your Shader Packs folder!
options.iris.shaderPackOptions.tooManyFiles=Cannot import multiple Shader Settings files!
options.iris.shaderPackOptions.failedImport=Failed to import Shader Settings file "%s"
options.iris.shaderPackOptions.importedSettings=Imported Shader Settings from "%s"
options.iris.shaders.disabled=Shaders: Disabled
options.iris.shaders.enabled=Shaders: Enabled
options.iris.shaders.nonePresent=Shaders: No Packs Present
options.iris.back=Back
options.iris.reset=Reset
options.iris.reset.tooltip=Reset ALL options and apply?
options.iris.reset.tooltip.holdShift=Hold SHIFT and click to reset
options.iris.importSettings.tooltip=Import settings from file
options.iris.exportSettings.tooltip=Export applied settings to file
options.iris.mustDisableFullscreen=Please disable fullscreen first!
options.iris.setToDefault=Set option to default value?
options.iris.profile=Profile
options.iris.profile.custom=Custom
options.iris.shadowDistance=Max Shadow Distance
options.iris.shadowDistance.enabled=Allows you to change the maximum distance for shadows. Terrain and entities beyond this distance will not cast shadows. Lowering the shadow distance can significantly increase performance.
options.iris.shadowDistance.disabled=Your current shader pack has already set a render distance for shadows; you cannot change it.
options.iris.gui.hide=Hide GUI
options.iris.gui.show=Show GUI
pack.iris.select.title=Select
pack.iris.configure.title=Configure
label.iris.true=Encendido
label.iris.false=Apagado